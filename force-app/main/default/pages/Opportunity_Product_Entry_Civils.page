<apex:page standardController="Opportunity" extensions="opportunityProductEntryCusExtension"   lightningStylesheets="true">

    <style>
        .search{
            font-size:10pt;
            margin-right: 20px;    
        }
        .fyi{
            color:red;
            font-style:italic;
        }
        .label{
            margin-right:10px;
            font-weight:bold;
        }

        .SSEN Connections {background-color:white; color:black; }
     
        a {color:black;}
        a:hover {color:black;}
        
        <!-- css for the sticky header section-->  
   
     .floatingHeader 
     {  
                position: fixed;  
                top: 0;  
                visibility: hidden;  
                z-index: 10;  
                background-color: white;  
     }  
     
       
    </style>
    
    <script type='text/javascript'>
    
        // This script assists the search bar functionality
        // It will execute a search only after the user has stopped typing for more than 1 second
        // To raise the time between when the user stops typing and the search, edit the following variable:
        
        var waitTime = 1; 
        var countDown = waitTime+1;
        var started = false;
        
        function resetTimer()
        {
            countDown=waitTime+1;
            
            if(started==false)
            {
                started=true;
                runCountDown();
            }
        }
    //function reloadContent()
    //{
    //document.location.reload(true);
    //}
        function runCountDown()
        {        
            countDown--;
            
            if(countDown<=0)
            {
                fetchResults();
                started=false;
            }
            else
            {
                window.setTimeout(runCountDown,1000);
            }
        }
    
    </script>
   
    <apex:form >
    
        <apex:outputPanel id="mainBody">
            
            <!-- this is the upper table... a.k.a. the "Shopping Cart"-->
            <!-- notice we use a lot of $ObjectType merge fields... I did that because if you have changed the labels of fields or objects it will reflect your own lingo -->
            
            <apex:outputPanel id="displayMode">               
                <!--This Panel Only display the fields-->  
                <apex:outputLink value="{!URLFOR($Action.Opportunity.View,Opportunity.id)}" target="_parent">
                    &lt; &lt; Back to {!Opportunity.Name} 
                </apex:outputLink>

                  <apex:pageBlock id="displayed" rendered="{!showDisplayPanel}">
                               
                    <apex:pageblockTable value="{!rows}" var="row" onrowmouseover="this.classList.remove('highlight')">
                        
                    <apex:column >
                       <apex:facet name="header">   
                               <apex:commandLink action="{!ViewData}" value="No.{!IF(sortExpression=='Sort_Order__c',IF(sortDirection='ASC','▼','▲'),'')}" >
                                   <apex:param value="Sort_Order__c" name="column" assignTo="{!sortExpression}" ></apex:param>
                                </apex:commandLink> 
                            </apex:facet> 
                          <apex:outputField value="{!row.oli.Sort_Order__c}" />  
                    </apex:column>  
                    
                    <apex:column styleClass="{!SUBSTITUTE(row.oli.Product_Family__c, ' ', '')}">
                            <apex:facet name="header">   
                                <apex:commandLink action="{!ViewData}" value="Name{!IF(sortExpression=='Product_Text__c',IF(sortDirection='ASC','▼','▲'),'')}" >
                                    <apex:param value="Product_Text__c" name="column" assignTo="{!sortExpression}" ></apex:param>
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputLink value="{!IF(row.oli.id != null,URLFOR($Action.OpportunityLineItem__c.View,row.oli.id),'#')}" target="_parent">
                                {!row.oli.Product_Text__c } 
                            </apex:outputLink>
                    </apex:column>
     
   <!--                  <apex:column headerValue="{!$ObjectType.OpportunityLineItem__c.Fields.BORIS_Code__c.Label}" styleClass="{!SUBSTITUTE(row.oli.Product_Family__c, ' ', '')}">
                        <apex:outputField value="{!row.oli.BORIS_Code__c}" />
                    </apex:column>   
                    
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem__c.Fields.Unit_Of_Measure_Ref__c.Label}" styleClass="{!SUBSTITUTE(row.oli.Product_Family__c, ' ', '')}">
                        <apex:outputField value="{!row.oli.Unit_Of_Measure_Ref__c}" />
                    </apex:column>                                  -->
                               
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem__c.Fields.Quantity__c.Label}" styleClass="{!SUBSTITUTE(row.oli.Product_Family__c, ' ', '')}">
                        <apex:outputField value="{!row.oli.Quantity__c}" />
                    </apex:column>
                             
                </apex:pageblockTable>           
 
                <apex:pageBlockButtons >             
                    <apex:commandButton action="{!displayEditMode}" value="Edit"/>                    
                </apex:pageBlockButtons>
                    
            </apex:pageBlock>
            </apex:outputPanel>
           
            <apex:outputPanel id="EditMode" >
                <apex:pageBlock id="selected" rendered="{!showEditPanel}" > 
                    <apex:pageblockTable value="{!rows}" var="row" onrowmouseover="this.classList.remove('highlight')">

                        <apex:column styleClass="{!SUBSTITUTE(row.oli.Product_Family__c, ' ', '')}">
                            <apex:commandLink value="Del" action="{!deleteRow}" reRender="selected,searchResults" immediate="true">
                                <!-- this param is how we send an argument to the controller, so it knows which row we clicked 'remove' on -->
                                <apex:param value="{!row.rowId}" assignTo="{!selectedRowId}" name="toUnselect"/>
                            </apex:commandLink>
                        </apex:column>                      
                        
                        <apex:column headerValue="Items" styleClass="{!SUBSTITUTE(row.oli.Product_Family__c, ' ', '')}">
                            <apex:inputField value="{!row.oli.Product_Text__c}" rendered="{!row.multiple == True}" style="width:200px;" />
                            <apex:outputField value="{!row.oli.Product_Text__c}" rendered="{!row.multiple == False}" style="width:200px;" />
                        </apex:column>
                                     
  <!--                     <apex:column headerValue="{!$ObjectType.OpportunityLineItem__c.Fields.BORIS_Code__c.Label}" styleClass="{!SUBSTITUTE(row.oli.Product_Family__c, ' ', '')}">
                         <apex:outputField value="{!row.oli.BORIS_Code__c}" />
                       </apex:column>     
                      
                       <apex:column headerValue="{!$ObjectType.OpportunityLineItem__c.Fields.Unit_Of_Measure_Ref__c.Label}" styleClass="{!SUBSTITUTE(row.oli.Product_Family__c, ' ', '')}">
                        <apex:outputField value="{!row.oli.Unit_Of_Measure_Ref__c}" />
                       </apex:column>      -->
                                              
                       <apex:column headerValue="{!$ObjectType.OpportunityLineItem__c.Fields.Quantity__c.Label}" styleClass="{!SUBSTITUTE(row.family, ' ', '')}">
                        <apex:inputField value="{!row.oli.Quantity__c}" style="width:80px;" />
                       </apex:column>
                        
                </apex:pageblockTable>
                      
                <apex:pageBlockButtons id="editButtons" >
                    <apex:actionStatus id="status">
                        <apex:facet name="stop">
                            <apex:outputPanel >
                            <!--    <apex:commandButton action="{!addSSENConnections}" value="Add SSEN Connections" rendered="{!showEditPanel && showSSENConnections}" reRender="EditMode,editButtons" status="status" />   -->
                                <apex:commandButton action="{!onSave}" value="Save" rerender="editButtons" rendered="{!showEditPanel}" status="status" />
                                <apex:commandButton action="{!onCancel}" value="Cancel" immediate="true" rendered="{!showEditPanel}" />
                            </apex:outputPanel>
                        </apex:facet>
                        <apex:facet name="start">
                            <apex:outputPanel >
                          <!--      <apex:commandButton action="{!addSSENConnections}" value="Add SSEN Connections" rendered="{!showEditPanel && showSSENConnections}" reRender="EditMode,editButtons" status="status" />   -->
                                <apex:commandButton action="{!onSave}" value="Save" rendered="{!showEditPanel}" disabled="true"/>
                                <apex:commandButton action="{!onCancel}" value="Cancel" immediate="true" rendered="{!showEditPanel}" />
                                <div style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; opacity: 0.25; z-index: 1000; background-color: black;">
                                     
                                </div>
                                <div style="position: fixed; left: 0; top: 0; bottom: 0; right: 0; z-index: 1001; margin: 15% 50%">
                                    <div style="display: inline-block; padding: 2px; background-color: #fff; width: 125px;">
                                        <img src="/img/loading.gif" style="float: left; margin: 8px;" />
                                        <span style="display: inline-block; padding: 10px 0px;">Please Wait...</span>
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </apex:facet>
                    </apex:actionStatus>
                </apex:pageBlockButtons>
            </apex:pageBlock>
            
            <!-- this is the lower table: search bar and search results rerender="selected"-->
    
            <apex:pageBlock rendered="{!showEditPanel}" >
                <apex:pageBlockButtons location="top">
                    <apex:outputPanel id="myButtons" >
                        <apex:commandButton action="{!Beginning}" title="Beginning" value="<<" disabled="{!disablePrevious}" reRender="searchResults,myButtons"/>
                        <apex:commandButton action="{!Previous}" title="Previous" value="<" disabled="{!disablePrevious}" reRender="searchResults,myButtons"/>        
                        <apex:commandButton action="{!Next}" title="Next" value=">" disabled="{!disableNext}" reRender="searchResults,myButtons"/>
                        <apex:commandButton action="{!End}" title="End" value=">>" disabled="{!disableNext}" reRender="searchResults,myButtons"/> 
                    </apex:outputPanel>   
                </apex:pageBlockButtons>

                <apex:outputPanel styleClass="search">
                    Search for Items:
                </apex:outputPanel>

                <apex:actionRegion renderRegionOnly="false" immediate="true">
                    <apex:actionFunction name="fetchResults" action="{!Beginning}" reRender="searchResults,myButtons" status="searchStatus"/>                    
                    <!-- here we invoke the scripting to get out fancy 'no button' search bar to work -->
                    <apex:inputText value="{!searchString}" onkeydown="if(event.keyCode==13){this.blur();}else{resetTimer();}" style="width:300px"/>
                      
                    <i>
                        <!-- actionStatus component makes it easy to let the user know when a search is underway -->
                        <apex:actionStatus id="searchStatus" startText="searching..." stopText=" "/>
                    </i>                    
                </apex:actionRegion>
            
                <br/>
                <br/>
            
                <apex:outputPanel id="searchResults" style="width:200px;">
                    <apex:pageBlockTable value="{!AvailableProducts}" var="a" >                     
                        <apex:column >
                             <apex:facet name="header">        
                                <apex:commandLink value="Item Name{!IF(sortField=='Name',IF(sortDir='ASC','▼','▲'),'')}"  action="{!toggleSort}" style="width:200px;" >
                                   <apex:param name="sortField" value="Name" assignTo="{!sortField}"  />
                                 </apex:commandLink>
                            </apex:facet>
                            <apex:outputText value="{!a.Name}" />
                        </apex:column>

                        <apex:column headerValue="{!$ObjectType.Product2.Fields.BORIS_code__c.Label}" value="{!a.BORIS_code__c}"/>   

                        <apex:column >
                            <!-- command button in a column... neato -->
                            <apex:commandButton value="Add" action="{!addToShoppingCart}" reRender="selected,searchResults" immediate="true">
                                <!-- again we use apex:param to be able to tell the controller which row we are working with -->
                                <apex:param value="{!a.Id}" assignTo="{!toSelect}" name="toSelect"/>
                            </apex:commandButton>
                        </apex:column>


                    </apex:pageBlockTable>
                    
                    <!-- We put up a warning if results exceed 100 rows -->
                    <apex:outputPanel styleClass="fyi" rendered="{!overLimit}">
                        <br/>
                        Your search returned over 100 results, use a more specific search string if you do not see the desired {!$ObjectType.Product2.Label}.
                        <br/>
                    </apex:outputPanel>
                    Showing Page # {!pageNumber} of {!totalPages}

                </apex:outputPanel>
            
            </apex:pageBlock>
            </apex:outputPanel><!--End of EditMode Panel-->
        </apex:outputPanel>

    </apex:form>
    
    <!-- delay save until onchange action has completed -->
    <apex:actionStatus id="status">
        <apex:facet name="start">
            <div class="outerCls"></div>
            <div class="innerCls">
                Processing...
            </div>
        </apex:facet>
    </apex:actionStatus>                
    <style>
        .innerCls{
        left:50%;
        top:50%;
        position:fixed;
        }
        .outerCls{
        top: 0px;
        left: 0px;
        position: absolute;
        background-color: #CCC;
        opacity: 0.40;
        width: 100%;
        height: 100%;
        }
    </style>  
    
</apex:page>